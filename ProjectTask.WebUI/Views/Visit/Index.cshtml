@model IEnumerable<VisitViewModel>

@{
    var doctorList = ViewData["doctors"] as IEnumerable<DoctorViewModel>;
    var doctorTypeList = ViewData["doctor_types"] as IEnumerable<DoctorTypeViewModel>;
    var pacientList = ViewData["pacients"] as IEnumerable<PacientViewModel>;
}

<div class="panel panel-default">
    <div class="panel-heading">
        <a asp-action="Create" class="btn btn-primary modalItems" >
            <span class="text">Добавить</span>
        </a>
    </div>
</div>
<div>
    <div class="modal fade" id="modal-placeholder" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" id="modalContent">
            </div>
        </div>
    </div>
</div>

@(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => doctorList.Where(x => x.Id == model.DoctorId).Select(x => x.SurName).FirstOrDefault())
            .Titled("Фамилия врача");
        columns.Add(model => doctorTypeList.Where(x => x.Id == model.DoctorTypeId).Select(x => x.Name).FirstOrDefault())
            .Titled("Специальность врача");
        columns.Add(model => pacientList.Where(x => x.Id == model.PacientId).Select(x => x.SurName).FirstOrDefault())
            .Titled("Фамилия пациента");
        columns.Add(model => model.Diagnosis);
        columns.Add(model => model.Complaints);
        columns.Add(model => model.VisitDate);
        columns.Add(model => "<a class=\"modalItems\" href='" + Url.Action("Edit", new { model.Id }) + "'>Изменить</a>")
            .Encoded(false);
        columns.Add(model => "<a class=\"modalItems\" href='" + Url.Action("Delete", new { model.Id }) + "'>Удалить</a>")
            .Encoded(false);
    })
    .ApplyDefaults()
)

@section scripts{
    <script type="text/javascript">
        $(function () {
            $.ajaxSetup({ cache: false });
            $(".modalItems").click(function (e) {
                e.preventDefault();
                $.get(this.href, function (data) {
                    $('#modalContent').html(data);
                    $("#modal-placeholder").modal('toggle');
                });
            })

            var placeholderElement = $('#modal-placeholder');

            placeholderElement.on('click', '[data-save="modal"]', function (event) {
                event.preventDefault();
                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var dataToSend = form.serialize();
                $.post(actionUrl, dataToSend).done(function (data) {
                    var newBody = $('.modal-body', data);
                    placeholderElement.find('.modal-body').replaceWith(newBody);
                    var isValid = newBody.find('[name="IsValid"]').val() == 'True';
                    if (isValid) {
                        location.reload();
                        //placeholderElement.modal('hide');
                    }
                });
            });
        });
    </script>}